Title: Auto-installation & Auto-uninstallation

<h2>Auto-install</h2>

<p>tmda-cgi is now capable of autoinstalling TMDA on user accounts.</p>

<p><b><i>TMDA must already be installed on the server.</i></b></p>

<p>This feature does not install TMDA, but configures an already existing
  e-mail account so it will work with TMDA.</p>

<p>To use this feature, the user need only log in to tmda-cgi (<a
  href="auth.html#ProgAuth">program</a> or <a
  href="auth.html#RemtAuth">remote</a> authentication is strongly recommended
  if you wish to use auto-install) and click "Sign up." However, the system
  administrator will need to verify how the installation will be done
  beforehand!</p>

<a href="#Skel"><tt>skel</tt></a><br>
<a href="#Anomalies"><tt>anomalies</tt></a><br>
&nbsp;&nbsp;&nbsp;<a href="#PERMISSIONS"><tt>PERMISSIONS</tt></a><br>
&nbsp;&nbsp;&nbsp;<a href="#VIRTUAL_TEST"><tt>VIRTUAL_TEST</tt></a><br>
&nbsp;&nbsp;&nbsp;<a href="#REAL_ONLY"><tt>REAL_ONLY</tt></a><br>
&nbsp;&nbsp;&nbsp;<a href="#VIRTUAL_ONLY"><tt>VIRTUAL_ONLY</tt></a><br>
&nbsp;&nbsp;&nbsp;<a href="#PARENT_RE"><tt>PARENT_RE</tt></a><p>

<h3><a name="Skel"></a><tt>skel</tt></h3>

<p>Before allowing users to auto-install or auto-uninstall, carefully check
  over each file in the <tt>skel/install</tt> directory. These files will be
  copied to the user's directory upon installation.</p>

<p><b><i>Important note:</i></b> The <tt>skel</tt> directories included with
  tmda-cgi were designed for servers running <a
  href="http://cr.yp.to/qmail.html">qmail</a>.  If you use a different mail
  server package, do <b><i>not</i></b> use the files as-is! You should look
  through these files and see how they work, but you will need to create a
  totally different set of <tt>skel</tt> files.

<p><tt>skel</tt> files allow for variable substitution. All of the following
  text strings, if found in the file or filename, will be replaced with the
  following:</p>

<table cellpadding="7">
  <tr>
    <td valign="top" nowrap><b><tt>%(Base)s</tt></b></td>
    <td>The path to TMDA's root directory.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(CryptKey)s</tt></b></td>
    <td>A new valid, random, cryptographic key.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(Domain)s</tt></b></td>
    <td>Best guess of the user's domain.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(Home)s</tt></b></td>
    <td>The path to the user's home directory.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(Name)s</tt></b></td>
    <td>A quoted string or None, depending on whether user's real name is
      available.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(Parent)s</tt></b></td>
    <td>The constant string "<tt>..</tt>".</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(qUser)s</tt></b></td>
    <td>Same as <tt>%(qUser)s</tt> below, except that any "." characters have
      been replaced with ":" characters.  .qmail files require user names to be
      renamed in this fashion.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(RealHome)s</tt></b></td>
    <td>The home directory for the real user in use. If a real user is logging
      in, then this is their home directory. If a virtual user is logging in,
      then this is typically <tt>/home/vpopmail</tt>.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(ShortUrlDom)s</tt></b></td>
    <td>The domain name portion of the URL the user surfed up, without any
      "www.", if present.<br>
      Also see <tt>%(UrlDomain)s</tt>, below.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(UrlDomain)s</tt></b></td>
    <td>The domain name portion of the URL the user surfed up.<br>
      Also see <tt>%(ShortUrlDom)s</tt>, above.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(User)s</tt></b></td>
    <td>The user's login name, or the left-most portion (before the "@") of the
      user's e-mail address in the case of virtual users.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(VirtUser)d</tt></b></td>
    <td>1 if the user is a virtual user, 0 if the user is real.</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(VPop)s</tt></b></td>
    <td>The path to the virtual user's home directory (for example:
      <tt>/home/vpopmail</tt>).</td>
  </tr>
  <tr>
    <td valign="top" nowrap><b><tt>%(VPopBin)s</tt></b></td>
    <td>The path to the virtual user's bin directory (for example:
      <tt>/home/vpopmail/bin</tt>).</td>
  </tr>
</table>

<p>If you need to put a "%" in one of the <tt>skel</tt> files, you will have to
  type "%%" instead.  This will prevent errors during the install process.</p>

<p>In addition to a <tt>skel/install</tt> directory, there is also a
  <tt>skel/uninstall</tt> directory.  If you have any files which should be
  installed after the uninstall process is complete, you may place skeletons
  for them files here. For example, qmail users should add a
  <tt>.qmail-default</tt> file after uninstallation so that any future mail
  that comes in for a tagged address will still be accepted.</p>

<h3><a name="Anomalies"></a><tt>anomalies</tt></h3>

<p><tt>skel</tt> directories may optionally have a file called
  <tt>anomalies</tt>. This file contains <a href="http://python.org">Python</a>
  code which tells the installer/uninstaller what it should do beyond simply
  copying the files to the user's directory.</p>

<p><tt>anomalies</tt> supports the following variables:</p>

<h4><a name="#PERMISSIONS"></a><tt>PERMISSIONS</tt></h4>
<blockquote>
  <p>A dictionary of filenames and what octal permissions should be assigned to
    them.</p>
  <p>Install example:
    <table class="example">
      <tr>
        <td>PERMISSIONS = {".tmda/crypt_key": 0600}</td>
      </tr>
    </table>
</blockquote>

<h4><a name="#VIRTUAL_TEST"></a><tt>VIRTUAL_TEST</tt></h4>
<blockquote>
  <p>A regular expression test which can be applied to a user's HOME directory.
    If the test matches, then the user is assumed to be a virtual user.</p>
  <p>Example:
    <table class="example">
      <tr>
        <td>VIRTUAL_TEST = "^" + VPop</td>
      </tr>
    </table>
</blockquote>

<h4><a name="#REAL_ONLY"></a><tt>REAL_ONLY</tt></h4>
<blockquote>
  <p>A list of files or a dictionary of lists which should only be copied if
    the user logging in is "real" (i.e. <a
    href="#VIRTUAL_TEST"><tt>VIRTUAL_TEST</tt></a> did not match the user's
    HOME directory).</p>
  <p>The optional dictionary structure of this configuration variable allows
    you to specify different files based on the mail program (see <tt><a
    href="/config-vars.html#MAIL_TRANSFER_AGENT">MAIL_TRANSFER_AGENT</a></tt>)
    you're using.  You can only have one mail program installed, of course, so
    if you are creating this skel directory by hand, feel free to simply use a
    list.</p>
  <p>Install example:
    <table class="example">
      <tr>
        <td>REAL_ONLY = {"qmail": [".qmail", ".qmail-default"]}</td>
      </tr>
    </table>
  <p>Uninstall example:
    <table class="example">
      <tr>
        <td>REAL_ONLY = {"qmail": [".qmail-default"]}</td>
      </tr>
    </table>
</blockquote>

<h4><a name="#VIRTUAL_ONLY"></a><tt>VIRTUAL_ONLY</tt></h4>
<blockquote>
  <p><tt>VIRTUAL_ONLY</tt> is the compliment to <a
    href="#REAL_ONLY"><tt>REAL_ONLY</tt></a>, above.  These files should only
    be copied if the user logging in is a virtual user (i.e. <a
    href="#VIRTUAL_TEST"><tt>VIRTUAL_TEST</tt></a> matched the user's HOME
    directory).</p>
  <p>Install example:
    <table class="example">
      <tr>
        <td>VIRTUAL_ONLY = {"qmail": ["%(Parent)s/.qmail-%(User)s",<br>
          &nbsp;&nbsp;"%(Parent)s/.qmail-%(User)s-default"]}</td>
      </tr>
    </table>
  <p>Uninstall example:
    <table class="example">
      <tr>
        <td>VIRTUAL_ONLY = {"qmail":
          ["%(Parent)s/.qmail-%(User)s-default"]}</td>
      </tr>
    </table>
</blockquote>

<h4><a name="#PARENT_RE"></a><tt>PARENT_RE</tt></h4>
<blockquote>
  <p><tt>PARENT_RE</tt> is a regular expression which tests if we are in the
    user's "parent" directory.  Finding the parent directory is not as simple
    as doing a ".." because virtual user systems with many users may stack the
    domain multiple layers down.  By using this test we can tell when we have
    removed enough directories.</p>
  <p>Example:
    <table class="example">
      <tr>
        <td>PARENT_RE = "^" + VPop + "/domains/[^/]+\.[^/]+$"</td>
      </tr>
    </table>
</blockquote>
