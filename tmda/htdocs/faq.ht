Title: TMDA FAQ
Links: overview-links.h usage-links.h support-links.h

<h3>TMDA FREQUENTLY ASKED QUESTIONS</h3>
<ol>
<li><a href="#1">How do I setup a whitelist?</a> <br>
<li><a href="#2">Will TMDA run on non-unix clients such as Microsoft Windows?</a> <br>
<li><a href="#3">Does TMDA have a web interface?</a> <br>
<li><a href="#4">How do I setup TMDA with vpopmail?</a> <br>
<li><a href="#5">How can I manually release / delete / view messages in my pending queue?</a> <br>
<li><a href="#6">How do I allow my ezmlm mailing lists to pass through TMDA?</a> <br>
<li><a href="#7">How can I prevent BBDB from asking about 'dated' addresses?</a><br>
<li><a href="#8">Why don't my user+detail addresses work with Sendmail virtualdomains?</a><br>
<li><a href="#9">Why don't my user+detail addresses work with Sendmail /etc/aliases?</a><br>
<li><a href="#10">Is TMDA planning to support Microsoft Exchange Server?</a><br>
<li><a href="#11">Can't spammers just setup an auto-responder to defeat TMDA?</a><br>
<li><a href="#12">Why isn't TMDA written in Perl, C, C++, Java, etc..?</a><br>
<li><a href="#13">Can I post to a TMDA protected mailing list with a 'dated' address?</a><br>
<li><a href="#14">How do I prevent my auto-whitelist from being filled with 'dated' addresses?</a><br>
</ol>

<hr>
<li><b>
<a name="1">How do I setup a whitelist?</a>  I'd like any address in
my domain (domain.dom) to be able to send me mail without
worrying about confirmations.
</b>
<br><br>

You can allow senders, or groups of senders directly into your mailbox
by adding lines to your incoming filter file.  By default this is
~/.tmda/filters/incoming.    
<br><br>

For example, the following line will allow both anyone@domain.dom,
and anyone@sub.domain.dom into your mailbox:

<blockquote><pre>
from *@=domain.dom ok
</blockquote></pre>

If you have many individual addresses and/or expressions you'd like to
whitelist, you may keep them in a seperate file and then have TMDA access it
using the following line:

<blockquote><pre>
from-file ~/.tmda/lists/whitelist ok
</blockquote></pre>

~/.tmda/lists/whitelist would contain e-mail addresses and/or
wildcard expressions, one per line.  e.g,

<blockquote><pre>
king@grassland.com
*@myisp.net
*@cs.myuni.edu
*@=mycompany.com
bobby*@peru.com
</blockquote></pre>

See the <a href="config-filter.html">TMDA Filter Specification</a> 
for details on filter file syntax, options, and more examples.
<br><br>

The <em>collectaddys</em> script in the <strong>contrib</strong> directory
can be used to build an initial whitelist from your existing mail archives.
<br><br>

<b>NOTE</b>: For incoming mail, tmda-filter compares the address in
the Envelope-Sender, the "From:" header and the "Reply-To:" header
when looking for a match.

<hr>
<li><b>
<a name="2">Will TMDA run on non-unix clients such as Microsoft Windows?</a>
</b>
<br><br>
You do have a couple of options under Windows on the 
<a href="config-client.html">client side</a> of TMDA.

<br><br>
You can configure a qmail relay to re-write the address of outgoing
messages with tmda-inject, so that those running Microsoft Windows
clients can take full advantage of TMDA.  See `README.RELAY' in the
contrib/ directory or one user's
<a href="http://tmda.bordewich.net/" TARGET="Resource Window">
configuration details</a> 
for a site-wide TMDA install using smtpd-auth, vpopmail and qmailadmin.
<br><br>

TMDA also works perfectly under <a href="http://www.cygwin.com/" TARGET="Resource Window">
cygwin</a> with the sSMTP sendmail emulation program (which comes with cygwin).
Just add the following line your tmdarc:

<blockquote><pre>
SENDMAIL = "/usr/sbin/ssmtp.exe"
</blockquote></pre>

You'll then be able to tag your outgoing mail with cygwin-compatible
MUAs (mutt, XEmacs, etc.) just as under UNIX.

<hr>
<li><b>
<a name="3">Does TMDA have a web interface?</a>
</b>
<br><br>
Yes.  <a href="http://devel.samstech.net/" TARGET="Resource Window">QAdmin-TMDA</a> is
a TMDA configuration and administration tool which integrates into the 
<a href="http://inter7.com/qmailadmin/" TARGET="Resource Window">QmailAdmin</a>
 web managment system.  For more information on QAdmin-TMDA's capabilities,
see its <a href="http://mla.libertine.org/tmda-announce/200111/msg00002.html" TARGET="Resource Window">
original announcement</a>.

<hr>
<li><b>
<a name="4">How do I setup TMDA</a> with <a href="http://inter7.com/vpopmail/" TARGET="Resource Window">vpopmail</a>?
</b>
<br><br>
See Lou Hevly's <a href="http://www.visca.com/tmda/tmda_vpop.html" TARGET="Resource Window">
TMDA/vpopmail tutorial</a>

<hr>
<li><b>
<a name="5">How can I manually release / delete / view messages in my pending queue?</a>
</b>
<br><br>

TMDA comes with a utility called `tmda-pending' which can do all of
this and more for you.  You can run it by hand, or periodically from
cron.  Run ``tmda-pending -h'' to get a listing of available options
and usage examples.  tmda-pending should be run by the user account
that owns the pending queue, not by root (unless root is running
TMDA).  <br><br>

<strong>NOTE:</strong> Use tmda-pending's delete and release options
with discretion.  If a sender tries to confirm a message which you
have manually removed, they will get back an error message from TMDA
about the missing message.  Thus, it is best to only manually remove
messages which have no (or little) chance of being confirmed by their
sender such as mailing list messages.  <br><br>

If you want to maintain a copy of pending messages to play with, you
can set <strong>CONFIRM_CC</strong> in your .tmdarc.  This variable
takes an e-mail address that will receive a copy of any message that
triggers a confirmation request.  See your sample.tmdarc for an
example.
<hr>

<li><b>
<a name="6">How do I allow my</a> <a href="http://cr.yp.to/ezmlm.html" TARGET="Resource Window">ezmlm</a>
mailing lists to pass through TMDA?  Each list message is sent out 
with a different envelope sender address.
</b>
<br><br>

You can whitelist the ezmlm list using wildcard characters.  Here is
an example whitelist entry for the qmail mailing list:

<blockquote><code>
qmail-return-*@list.cr.yp.to
</blockquote></code>

This will allow messages to get through when initially interacting
with ezmlm to get subscribed, as well as after when list messages are
delivered.
<hr>

<li><b>
<a name="7">I use</a> <a href="http://bbdb.sourceforge.net/" TARGET="Resource Window">BBDB</a>, 
and every time it sees a new 'dated' address it asks me whether I want
it added to so-and-so's BBDB record.  How can I prevent this?
</b>
<br><br>

You can either set <em>bbdb-always-add-addresses</em> to
<em>'never</em>, or use a 
<a href="http://my.gnus.org/Lisp/1012312767" TARGET="Resource Window">BBDB hook</a>
to filter the addresses before adding them to the database.

<hr>

<li><b>
<a name="8">I'm running Sendmail, and noticed that my user+detail addresses don't
work if the message is sent to a virtual domain.  What's the problem?</a>
</b>
<br><br>
You need some special entries in the virtusertable (and a modern version
of sendmail - at least 8.10.1 to get full functionality) to preserve the
+detail portion of the address.  For example, if you currently have
the following in your virtusertable:

<blockquote><pre>
bobby@peru.com    bobby
</blockquote></pre>

you can change this to:

<blockquote><pre>
bobby+*@peru.com  bobby+%2
</blockquote></pre>

See the virtusertable section in your Sendmail's cf/README for the
full details.
<hr>

<li><b>
<a name="9">I'm running Sendmail, and noticed that my user+detail addresses don't
work if the message is sent to a one of my aliases.  What's the problem?</a>
</b>
<br><br>
If you have the following in /etc/aliases:

<blockquote><pre>
webmaster: johndoe
</blockquote></pre>

+detail is preserved for mail to johndoe+detail, but not for
webmaster+detail.
<br><br>

Unfortunately, there is no way to preserve the +detail portion in
/etc/aliases.  You must use the virtusertable for this (see previous
question).

<hr>

<li><b>
<a name="10">Is TMDA planning to support Microsoft Exchange Server?  I
see a real business opportunity here for someone who wanted to take
TMDA and make it an enterprise solution.</a>
</b>
<br><br>
Support for Exchange Server is not planned primarily because I have no
access to this software, and no interest in developing in a Microsoft
environment.  Also, TMDA is an <a href="http://www.opensource.org/"
TARGET="Resource Window">opensource</a> endeavor, not a profit
oriented one, and therefore I'm also not interested in turning it into
an "enterprise solution".  I enjoy my personal freedom too much to
consider this.
<hr>

<li><b>
<a name="11">Can't spammers just setup an auto-responder to defeat TMDA?</a>
</b>
<br><br>
In theory yes, but in practice this is not likely to happen.  Most
SPAM is unrepliable, so TMDA's confirmation requests are never
delivered to them.  They use non-valid return addresses as to not
incur the cost of the tremendous number of bounces they generate.
Using a valid return address to process all the bounces looking for
confirmation messages to auto-reply to would defeat their economies of
scale.  It would also make them easy to block, track down and report,
sue, etc.<br><br>

In short, trying to thwart TMDA in this manner would defeat the
cost-effectiveness of the bulk-mailing process.  Simple economics keep
us safe.<br><br>

Additionally, the majority of the population is not yet using TMDA or
a TMDA-like system to protect their mailbox, so we are simply not
worth the extra effort.  There are plenty of weaker, "less fit"
targets to prey on, and so they will, passing over us in the process.
<br><br>

But should these facts change, TMDA could modify its (currently very
simple) challenge response to make it more difficult for a computer to
auto-reply to.  The level of difficulty could increase as much as is
necessary for the sender to prove their humanity and legitimacy.
Until someone teaches a computer program to read and understand the
English language, I think we will have plenty of options here.
<hr>

<li><b>
<a name="12">Why isn't TMDA written in Perl, C, C++, Java, etc..?  Or,
any plans to translate TMDA into Perl, C, C++, Java, etc..?</a>
</b>
<br><br>
In short, no.  Python is an excellent choice for an application like
TMDA.  Python is a simple yet extremely powerful language with a
reasonably fast interpreter and comprehensive standard library.  It is
also very portable and has several features that make it very
attractive for Rapid Application Development.  I also happen to enjoy
programming in Python more than any other language.  
<br><br>

There are a few reasons that I can think of why you are asking
this question:
<br><br>
<ul>

<li>You run a high traffic site and are worried about the performance
implications of an application written in an interpreted language.  I
can understand your concern, but I wouldn't discount TMDA for
performance reasons just because it is written in Python.  Mailman is
a mailing list manager written in Python, and it handles
sourceforge.net's list traffic just fine (thousands of lists, hundreds
of thousands of messages/day).
<br><br>
If you find TMDA has performance limitations, we can always try and 
optimize it.  This might be the case as to my knowledge, it currently
isn't being used in any extremely high traffic environments.  You'll
be doing the entire user community a favor by experimenting, reporting
your results, and working with the developers to improve TMDA's performance.
<br><br>
In the meantime, it's likely that not all your users will want to use
TMDA, so you can save some processing by making it an optional
service.  I'd also recommend storing your lists in DBM or CDB format
rather than text where possible, as matching from database files is
significantly faster (fractions of a second).
<br><br>

<li>You are a developer and want to extend TMDA, but aren't familiar
with Python.  If you are a programmer of any repute, this shouldn't
be a problem.  Python's elegant and remarkably clear syntax make it
very easy to learn.  Certainly <b>much</b> easier than a language like Perl 
for example.
The <a href="http://python.org/doc/current/tut/" TARGET="Resource Window">Python Tutorial</a>
is a good place to start.  You may be surprised how much you like it.
</ul>
<hr>

<li><b>
<a name="13">Can I post to a TMDA protected mailing list with a <a href="config-client.html">'dated'</a>
 address?  Every time I post with one, I'm asked to confirm my message.</a>
</b>
<br><br>
Yes.  See 
<a href="http://mla.libertine.org/tmda-users/200203/msg00127.html" TARGET="Resource Window">this message</a> 
for how to do this; these instructions apply to any mailing list protected by TMDA.
<hr>

<li><b>
<a name="14">How do I prevent my auto-whitelist from being filled with 
<a href="config-client.html">'dated'</a> addresses?</a>
</b>
<br><br>
If you are using TMDA's <strong>CONFIRM_APPEND</strong> feature to
implement an "auto-whitelist", you may have noticed that it is being
filled with the 'dated' addresses of other TMDA users, which isn't
very helpful.  This can be disconcerting to the other party who must
confirm each of their messages to you.  <br><br>

The solution is to mix social practices with the technology.  Don't
rely entirely on CONFIRM_APPEND.  When you start to interact with a
new TMDA user, add a wildcard entry for them to your whitelist (e.g, 
<code>jason*@mastaler.com</code>).  This will work for
other TMDA-like schemes that use one-time addresses as well.
<hr>
