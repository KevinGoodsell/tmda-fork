Title: TMDA Server Configuration
Links: overview-links.h usage-links.h config-links.h support-links.h

<h3>TMDA Server Configuration</h3>

TMDA processes incoming messages on the SMTP server though a mail
filter program called tmda-filter.
<br><br>

Server configuration instructions differ based on which MTA you are running.

First follow the <A HREF="#general">general</a> set of instructions,
and then read the set of instructions corresponding to your MTA

[ <A HREF="#qmail">qmail</a> | 
  <A HREF="#exim-postfix">Exim/Postfix</a> |
  <A HREF="#sendmail">Sendmail</a>
]

<br><br>
<hr>

<a name="general"><h4>TMDA Server Configuration (general)</h4></a>

<ol>

<li>A unique, private key is required for every TMDA user.  This key
is stored in your TMDA configuration file (<b>~/.tmdarc</b>).  A
key-generation utility is included with the distribution.  Simply run
<b>tmda-keygen</b> and follow its instructions.
<br><br>

<li>Optionally create an incoming filter file by reading through the
<a href="config-filter.html">TMDA Filter Specification</a> (especially
the examples section at the end).  If you don't have an incoming
filter file, or the sender address doesn't match any lines in your
filter file, the incoming message will require confirmation.  The
lines in your filter make exceptions to that rule.  You can also
change the default by setting <strong>ACTION_INCOMING</strong> in your
tmdarc.  <br><br>

The most common use for the incoming filter is to create both a 
<a href="faq.html">"whitelist"</a> to allow your trusted contacts
directly into your mailbox, as well as a "blacklist" for those senders
you want to refuse mail from.
<br><br>

</ol>
<hr>

<a name="qmail"><h4>TMDA Server Configuration (qmail-only)</h4></a>

<ol>

<li>Finish setting up your <b>~/.tmdarc</b> and optionally a
system-wide <b>/etc/tmdarc</b> by reading through the included
<b>sample.tmdarc</b> file.  <b>CRYPT_KEY</b> is the only entry
required for qmail users, but there may be other settings you want to
enable or change.  <br><br>

<li>Setup dot-qmail files appropriately in your home directory.<br><br>

First setup <b>.qmail</b> as shown below, and then make a symbolic
link from there to <b>.qmail-default</b>.  This way you will only
have to make changes to the one file.
See
<a href="http://www.qmail.org/man/man5/dot-qmail.html" TARGET="Resource Window">dot-qmail(5)</a> 
if you are unfamiliar with how to use dot-qmail files to control the
delivery of mail messages.
<br><br>

<table border cellpadding=4 cellspacing=2>

<tr>
<th>dot-qmail file:</th>
<th>file contents:</th>
<th>action:</th>
</td>

<tr>
<td>.qmail</td>
<td><code>
|preline /path/to/tmda/bin/tmda-filter<br>
./Mailbox
</code>
</td>
<td>

If the message is legitimate, it
will pass-through to the second line and get saved to "~/Mailbox",
otherwise it goes through the confirmation process.

</td>
</tr>


<tr>
<td>.qmail-default</td>
<td><code>symbolic link<br> ($ ln -s ~/.qmail ~/.qmail-default)</code></td>
<td>Catches jason-*@ as long as another dot-qmail file does not take priority.</td>
</tr>

</table>
<br>

You may decide that you don't want to use TMDA on your primary
address, but would still like to set aside a secondary address which
does.  This would be useful not only for testing purposes, but also
for using in public forums such as newgroups and mailing lists where
the "harvesting" potential is high.  This is a much better alternative
than using a munged address such as <em>jasonNOSPAM@mastaler.com</em>
or <em>jason@REMOVE_THIS.mastaler.com</em> which is confusing, error
prone, and inconvenient for those trying to reply to your messages.

<br><br>

This can easily be accomplished with the dot-qmail interface.  For
example, if I wanted only <em>jason-tmda@mastaler.com</em> to be
processed by TMDA, I'd edit <b>.qmail-tmda</b> and make a link from
there to <b>.qmail-tmda-default</b>.<br><br>

<table border cellpadding=4 cellspacing=2>

<tr>
<th>dot-qmail file:</th>
<th>file contents:</th>
<th>action:</th>
</td>

<tr>
<td>.qmail-tmda</td>
<td><code>
|preline /path/to/tmda/bin/tmda-filter<br>
./Mailbox
</code>
</td>
<td>

Catches jason-tmda@.  If the message is legitimate, it
will pass-through to the second line and get saved to "~/Mailbox",
otherwise it goes through the confirmation process.

</td>
</tr>


<tr>
<td>.qmail-tmda-default</td>
<td><code>symbolic link<br> ($ ln -s ~/.qmail-tmda ~/.qmail-tmda-default)</code></td>
<td>Catches jason-tmda-*@</td>
</tr>

</table>
</ol>
<br>
<hr>

<a name="exim-postfix"><h4>TMDA Server Configuration (Exim and Postfix only)</h4></a>

<ol>

<li>Finish setting up your <b>~/.tmdarc</b> and optionally a
system-wide <b>/etc/tmdarc</b> by reading through the
included <b>sample.tmdarc</b> file.  <b>CRYPT_KEY</b>,
<b>MAIL_TRANSFER_AGENT</b>, <b>DELIVERY</b>, and
<b>RECIPIENT_DELIMITER</b> are required entries for non-qmail users.
<br><br>

<li>Modify <b>~/.forward</b> to send your mail through tmda-filter.

<blockquote><pre>

"| /path/to/tmda/bin/tmda-filter"

</blockquote></pre>

If this produces a bounce with an <em>env: python: No such file or
directory</em> error, you will need to add the full path to your Python
interpreter, e.g,:

<blockquote><pre>

"|/usr/local/bin/python /path/to/tmda/bin/tmda-filter"

</blockquote></pre>

<li>If you already filter your mail with procmail and wish to continue
doing so, you can invoke tmda-filter from your <b>.procmailrc</b> instead.<br><br>

Make sure your <b>~/.forward</b> calls procmail with the <b>-p</b> option:

<blockquote><pre>

"|/path/to/bin/procmail -p"

</blockquote></pre>

Finally, add the following snippet to the end of your existing <b>.procmailrc</b>
to do final delivery:

<blockquote><pre>

# Run the message through tmda-filter.
:0 w
| /path/to/tmda/bin/tmda-filter

# Take the exit code from TMDA.
EXITCODE=$?

# TMDA takes care of final delivery
DEFAULT=/dev/null

</blockquote></pre>

</ol>
<hr>

<a name="sendmail"><h4>TMDA Server Configuration (Sendmail only)</h4></a>

These instructions assume you are running procmail as your local
mailer as described in the 
<a href="config-pre.html#sendmail">Pre-Configuration</a> page.
<ol>

<li>Finish setting up your <b>~/.tmdarc</b> and optionally a
system-wide <b>/etc/tmdarc</b> by reading through the
included <b>sample.tmdarc</b> file.  <b>CRYPT_KEY</b>,
<b>MAIL_TRANSFER_AGENT</b>, <b>DELIVERY</b>, and
<b>RECIPIENT_DELIMITER</b> are required entries for non-qmail users.
<br><br>

<li>Set the SENDER, RECIPIENT, and EXTENSION variables, and then
invoke tmda-filter by adding the following snippet to the end of your
<b>~/.procmailrc</b>.

<blockquote><pre>

# Set the necessary environment variables.
EXTENSION="$1"
:0
* EXTENSION ?? .
{
  DELIMITER="+"
}
RECIPIENT="$LOGNAME$DELIMITER$EXTENSION@$HOST"
SENDER=`formail -x Return-Path | sed 's/[<>]//g;s/^[ ]*//'`

# Run the message through tmda-filter.
:0 w
| /path/to/tmda/bin/tmda-filter

# Take the exit code from TMDA.
EXITCODE=$?

# TMDA takes care of final delivery
DEFAULT=/dev/null

</blockquote></pre>

</ol>