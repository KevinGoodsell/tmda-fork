Title: TMDA Template HOWTO
Links: overview-links.h usage-links.h howto-links.h support-links.h

<h1>TMDA Template HOWTO</h1>

<hr>

<h2>Introduction</h2>

TMDA comes with a set of template files which hold the content used in
its various auto-responses. You can customize this content by editing
and maintaining your own set of templates, which will be explained
below.  <br><br>

There are currently three templates:

<ul>
<li>bounce.txt (for failure notices)<br>
<li>confirm_accept.txt (for confirmation acceptance notices)<br>
<li>confirm_request.txt (for confirmation requests)<br>
</ul>

If you downloaded a TMDA source tarball, these files will be located
in the <strong>templates/</strong> subdirectory of the
distribution. If you are using a TMDA package, the template files will
be in a global directory such as <strong>/etc/tmda/</strong> or
<strong>/usr/share/tmda/</strong>.

<hr>

<h2>Template structure</h2>

TMDA templates look much like a standard 
<a href="http://www.faqs.org/rfcs/rfc2822.html" TARGET="Resource Window">RFC 2822</a> 
e-mail message, consisting of header fields followed by a message body. The body
is separated from the header by an empty line.

<h3>header</h3>

Header fields are lines composed of a field name, followed by a dot
("."), followed by the name of the header's character set, followed by
a colon (":"), followed by a field value, and terminated by CRLF. e.g,

<pre><blockquote>
Subject.US-ASCII: Please confirm your message

</pre></blockquote>

Header fields and values MUST be composed of printable US-ASCII
characters. See the International section below if you wish to
use non-ASCII characters in your template header values.

<h3>body</h3>

The body of a message is simply lines of US-ASCII characters.  See the
International section below if you wish to use non-ASCII characters in
your template body.

<h3>composition</h3>

Templates are composed of plain text mixed with variables in
the form <code>%(variable)s</code>. The values of these variables
are strings which are filled in when the message is created from the
template. Variables can come from a variety of places:

<ol>
<li>Any variables in the Defaults.py namespace (usually shown in all
caps in the templates).<br><br>

<li>Any variable set in the bouncegen() function of tmda-rfilter
(usually in all lowercase in the templates).  You'll have to look at
the source for bouncegen() if you want a full list of these.<br><br>

<li>Any variable set in your ~/.tmda/config or in /etc/tmdarc. For
example, my config stores a local weather report in the variable
`la_weather', which I then reference in my custom template as
<code>%(la_weather)s</code>.
</ol>

<hr>

<h2>Customizing your templates</h2>

The contents of the default templates will suit the needs of some
users, but many will want to customize them.  TMDA makes this easy to do.
<br><br>

If you want to use customized templates, you define <a
href="http://tmda.net/config-vars.html#TEMPLATE_DIR">TEMPLATE_DIR</a>
in your ~/.tmda/config, and copy the default templates that you want
to customize to that directory. Another option is to invoke
tmda-filter with the <code>-t</code> option. Then edit the template(s)
to suit your needs.
<br><br>

If a template is not found in your custom directory, the default template
will be used. This allows you for example to only customize confirm_request.txt,
taking the defaults for the other templates.

<hr>

<h2>International templates</h2>

The default templates are written entirely in English, and in
US-ASCII. If your native language is not English, and you frequently
correspond with other users of that language, you may wish to use
multilingual templates. TMDA also allows you to do this fairly easily.
<br><br>

<strong>NOTE:</strong> It's recommended that you not remove the
English content from your templates, but rather supplement it with a
native language translation.  For better or worse, the common language
of the Internet is English, and to insure maximum readability, you
should adhere to this.  <br><br>

If your language does not use non-ASCII characters, you can safely
ignore the rest of this section. However, if you do wish to use
non-ASCII characters in your templates such as the cedilla in French
or umlauts in German, keep reading.

<h3>International e-mail primer</h3>

Internet e-mail was born at a time when most e-mail was composed of
7-bit ASCII characters only.  Of course, as e-mail has been deployed
worldwide, it has become internationalized, such that language
specific character sets can now be used in email messages. The base
standard still requires e-mail messages to be transfered using only
7-bit ASCII characters, so a slew of RFCs have been written describing
how to encode email containing non-ASCII characters into an RFC
2822-compliant format.
<br><br>

Luckily, TMDA handles all these gory details for you. This means you
can write your templates in the character set of your choice, and TMDA
will make sure the resulting auto-response is RFC-compliant.

<h3>Internationalized bodies</h3>

If you wish to use non-ASCII characters in the body of your template,
first change the value of the <code>BodyCharset</code> pseudo-header
field to the character set covering your language.  Refer to the table
at the bottom of this page for help figuring out which character set
to use. <br><br>

For example, if you are mixing German+English in your template,
<code>BodyCharset</code> should be set to the following:

<pre><blockquote>
BodyCharset: LATIN-1

</pre></blockquote>

Then just enter the non-ASCII characters directly into your template
along with the ASCII characters. TMDA will properly encode the message
based on the charset you specified.
<br><br>

<code>BodyCharset</code> only accepts one charset as its value, so you
should choose a character set that encompasses all the languages you
plan to use in your template. For example, you can write
German+Polish+English with LATIN-2 or German+Turkish+English with
LATIN-5 but there is no 8-bit charset to properly mix
German+Russian+English, for instance.
<br><br>

The entire <code>BodyCharset</code> field is case-insensitive. If 
<code>BodyCharset</code> is not provided, it defaults to US-ASCII.

<h3>Internationalized headers</h3>

If you wish to use non-ASCII characters in your template header
values, first change the charset suffix for that header to the
character set covering your language. Refer to the table at the bottom
of this page for help figuring out which character set to use.
<br><br>

For example, if you want to use a German Subject in your template,
the Subject field might be changed to the following:

<pre><blockquote>
Subject.LATIN-1: Please confirm your message / Bitte Bestätigen

</pre></blockquote>

Unlike template bodies, template headers are not restricted
to one character set. Different headers can use different character
sets. For example, a Japanese From field with German Subject field:

<pre><blockquote>
From.EUC-JP: "Kenichi OKADA" <%(recipient_address)s>
Subject.LATIN-1: Please confirm your message / Bitte Bestätigen

</pre></blockquote>

If a charset suffix is not provided, it defaults to US-ASCII for
that header.

<h3>CJK (Chinese, Japanese, Korean)</h3>

Multi-byte character sets such as those used in CJK can be used in a
TMDA template, but requires that the proper Unicode codec be
installed into your Python first (single-byte 8-bit charsets don't need
a Unicode codec).

<h4>Chinese</h4>

First install the ChineseCodecs Python package.  This is available in 
<a href="http://sourceforge.net/projects/python-codecs" TARGET="Resource Window">CVS form</a>,
or in 
<a href="ftp://ftp.FreeBSD.org/pub/FreeBSD/ports/local-distfiles/perky/
"TARGET="Resource Window">tarball form</a>.
The latest version of the package at this writing is
1.2.0. Net/Free/OpenBSD packages are also available.
<br><br>

Simplified Chinese: Templates should be in the <strong>GB2132</strong> charset.<br>
Traditional Chinese: Templates should be in the <strong>BIG5</strong> charset.<br>

<h4>Japanese</h4>

First install the <a href="http://www.asahi-net.or.jp/~rd6t-kjym/python/" 
TARGET="Resource Window">JapaneseCodecs</a>
Python package. Debian and FreeBSD packages are also available. The latest version of the
package at this writing is 1.4.9.
<br><br>

Templates must be in the <strong>EUC-JP</strong> charset, not
ISO-2022-JP or Shift_JIS.  When the e-mail message is sent, the text
will be automatically be convered into ISO-2022-JP for 7-bit transmission.

<h4>Korean</h4>

First install the <a href="http://sourceforge.net/projects/koco/"
TARGET="Resource Window">KoreanCodecs</a>
Python package. FreeBSD and NetBSD packages are also available. The latest version of the
package at this writing is 2.0.5.
<br><br>

Templates must be in the <strong>EUC-KR</strong> charset.

<h3>Choosing the right character set</h3>

The charset value for <code>BodyCharset</code>, and the charset
suffix in Header.CHARSET: can be any standard character set name
(such as ISO-8859-1), or an alias for that charset (such as LATIN-1).
Charset names and aliases are case-insensitive.

<br><br>
All charsets are supported, but here is a table listing some of
the more popular ones, along with their alias (if any), and some
languages covered by that charset.

<br><br>

<table border cellpadding=4 cellspacing=2>

<tr>
<th>charset</th>
<th>charset alias(es)</th>
<th>coverage</th>
<th>example languages</th>
</td>

<tr>
<td>ISO-8859-1</td>
<td>LATIN-1</td>
<td>Western Europe</td>
<td>French, German, Finnish</td>
</tr>

<tr>
<td>ISO-8859-2</td>
<td>LATIN-2</td>
<td>Central and Eastern Europe</td>
<td>Czech, Hungarian, Croatian</td>
</tr>

<tr>
<td>ISO-8859-6</td>
<td>ARABIC</td>
<td>Arabic Alphabet</td>
<td>Arabic</td>
</tr>

<tr>
<td>ISO-8859-7</td>
<td>GREEK</td>
<td>Greece</td>
<td>Greek</td>
</tr>

<tr>
<td>ISO-8859-8</td>
<td>HEBREW</td>
<td>Hebrew script</td>
<td>Hebrew, Yiddish</td>
</tr>

<tr>
<td>ISO-8859-9</td>
<td>LATIN-5, TURKISH</td>
<td>Turkey</td>
<td>Turkish</td>
</tr>

<tr>
<td>ISO-8859-15</td>
<td>LATIN-9</td>
<td>Europe</td>
<td>Estonian, the Euro sign</td>
</tr>
<tr>

<td>KOI8-R</td>
<td>RUSSIAN</td>
<td>Russian Federation</td>
<td>Russian</td>
</tr>

<tr>
<td>EUC-JP</td>
<td>JAPANESE</td>
<td>Japan</td>
<td>Japanese</td>
</tr>

<tr>
<td>EUC-KR</td>
<td>KOREAN</td>
<td>Republic of Korea</td>
<td>Korean</td>
</tr>

<tr>
<td>TIS-620</td>
<td>THAI</td>
<td>Thailand</td>
<td>Thai</td>
</tr>

<tr>
<td>VISCII</td>
<td>VIETNAMESE</td>
<td>Vietnam</td>
<td>Vietnamese</td>
</tr>

</tr>
</table>
<br>

Also see Roman Czyborra's excellent 
<a href="http://czyborra.com/charsets/iso8859.html" TARGET="Resource Window">ISO 8859 Alphabet Soup</a>
for more on the ISO 8859 series (which will cover most user's I18N needs).
<br><br>

