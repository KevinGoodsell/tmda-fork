Title: TMDA Filter Specification
Links: overview-links.h usage-links.h config-links.h support-links.h

<h3>TMDA Filter Specification</h3>

TMDA filter files are used to control mail both coming in to and going
out of TMDA.  For incoming, the filter controls how the message is
disposed of.  For outgoing, it controls how the message is tagged.
The incoming filter file default is <b>~/.tmda/filters/incoming</b>,
which can be changed by setting <b>FILTER_INCOMING</b> in your
<b>tmdarc</b>.  The outgoing filter file default is
<b>~/.tmda/filters/outgoing</b>, which can be changed by setting
<b>FILTER_OUTGOING</b>.  
<br><br>

<u><b>Format of Filter Files</u></b>:
<br><br>
Each rule in a filter file is expected to start at the beginning of a
line.  Additional lines that are part of the same rule must be
indented by whitespace (spaces or tabs).  The amount of whitespace
doesn't matter.  A blank line (either empty or containing nothing but
whitespace) or a line beginning a new rule signifies the end of the
previous rule.
<br><br>

Everything after <code><b>#</b></code> on a line is considered a
comment and ignored.  Blank lines and lines with invalid syntax are
also ignored.  Lines are read sequentially from top to bottom, and the
<strong>first match wins</strong>.
<br><br>

The three fields in a filter file rule are:
<blockquote><pre><b>
source match action

</blockquote></pre></b>

<li><b>source</b>: specifices the source of the match and can be one of:
<br><br>

(for both incoming and outgoing):
<blockquote><pre>
to (recipient address)
to-file
to-cdb
to-dbm

</blockquote></pre>

(for incoming only):
<blockquote><pre>
from (sender address)
from-file
from-cdb
from-dbm
body (message body)
body-file
headers (message headers)
headers-file
size (message size)

</blockquote></pre>

<li><b>match</b>: 
should be an expression, or the full path to a textfile, CDB database, or
DBM database containing more expressions if <b>source</b> was suffixed
with `-file', `-cdb', or `-dbm'.
<br><br>

The second field within a textfile, CDB or DBM is optional, but overrides
action if present.  e.g,

<blockquote><pre>
foo@mastaler.com
bar@mastaler.com bounce

</blockquote></pre>
In a CDB or DBM, the keys should be the e-mail addresses to match, and
their corresponding values (or records) should be empty unless you
want to override the action specified in the filter file.  Example
scripts are included in the <strong>contrib</strong> directory to
convert your TMDA-style lists into CDB/DBM files and vice-versa.
These are <em>list2cdb/list2dbm</em> and <em>printcdb/printdbm</em>.
For CDB, you can also use the utilities (cdbmake, cdbdump, etc.) from
DJB's <a href="http://cr.yp.to/cdb.html" TARGET="Resource Window">CDB distribution</a> 
if you prefer.

DBM support comes with your Python intrepreter, but CDB support
currently requires that you first install the
<a href="http://pilcrow.madison.wi.us/#pycdb" TARGET="Resource Window">python-cdb</a>
extension module.
<br><br>

The following table shows what the <b>match</b> expression should
contain for a given <b>source</b>:
<br><br>

<blockquote><pre>
source:		match:
-------		------
to*		recipient e-mail address or wildcard expression.
from*		sender e-mail address or wildcard expression.
body*		regular expression matching message body content.
headers*	regular expression matching message header content.
size		comparison operator and number of bytes to compare to the
		size of the message.  Only `<' and `>' are supported.

</blockquote></pre>
<strong>NOTE:</strong> To match the empty envelope sender such as bounce
messages are sent with, use <b><code><></code></b> as the expression.
<br><br>

In addition to explicit e-mail addresses, you can use expressions
based on UNIX shell-style wildcard characters in either the
<b>match</b> field of a line, or within the textfile in the
<b>match</b> field.  Wildcard characters are not recognized
in a CDB or DBM file.  The special characters are:

<blockquote><pre>

Characters(s)    Description
-------------    -----------
*                Matches everything.
?                Matches any single character.
[seq]            Matches any character in seq.
[!seq]           Matches any character not in seq.

</blockquote></pre>

In addition, <code>`@='</code> (a custom rule) will expand to match
both <code>@</code> and <code>@*.</code>
<br><br>

Here are some common examples:
<blockquote><pre>   
# match only jdoe@domain.dom
jdoe@domain.dom
# match anyone@domain.dom, but not anyone@sub.domain.dom
*@domain.dom 
# match anyone@sub.domain.dom, but not anyone@domain.dom
*@*.domain.dom
# match both anyone@domain.dom, and anyone@sub.domain.dom
*@=domain.dom   

</blockquote></pre>

The body* and headers* sources on the other hand take regular expressions as defined
in Python's
<a href="http://www.python.org/doc/current/lib/module-re.html" TARGET="Resource Window">
re module</a>.
<br><br>

<li><b>action</b>: 
action specifies what action to take on the message.  An optional
<code><b>=</b></code> separates the action from the action's option.
Possible values differ based on whether the message is incoming or
outgoing.
<br><br>

(for incoming, action can be one of):
<blockquote><pre>
bounce,reject (bounce the message)
drop,exit,stop (silently drop the message)
ok,accept,deliver (deliver the message)
confirm (request confirmation for the message)

</blockquote></pre>

(for outgoing, action can be one of):
<blockquote><pre>
bare (don't tag)
bare=append (don't tag, and also add recipient to your BARE_APPEND file)
sender (tag with a sender address based on recipient)
sender=address (tag with a sender address based on address instead)
dated (tag with a dated address)
dated=timeout_interval 
default (tag with your default action as specified in ACTION_OUTGOING)
exp,explicit,as=full_address (use an explicit address)
ext,extension=address_extension (add an extension to the address)
kw,keyword=keyword (tag with a keyword address)
tag header action (tag specific headers with specific actions)

</blockquote></pre>

<strong>NOTE:</strong>
The <strong>tag</strong> action is useful when you need more fine
grained control over how your outgoing message is tagged.  For
example, you may want to send a message with a dated envelope sender
and Reply-To, but a sender address in the "From:" header.  This would
be useful when posting to a "members only" mailing list that checks
your From header for membership.  Your sender From allows the message
through to the list, and your dated Reply-To allows members to reply
to you directly without confirmation.  <br><br>

<u><b>Example Incoming Filter</u></b>:

<pre>

### ~/.tmda/filters/incoming (first match wins) ###

# Accept all bounces (messages with an empty envelope sender)
from <> ok

# Accept all messages to postmistress
to postmistress@* accept

# Bounce all messages from badboy.dom
from *@=badboy.dom bounce

# Accept all messages from mycorp.dom
from *@=mycorp.dom ok

# Include my blacklist and whitelist
from-dbm ~/.tmda/lists/blacklist.db drop
from-cdb ~/.tmda/lists/whitelist.cdb accept
from-file ~/.tmda/lists/whitelist_wildcards accept

# Revoked addresses
to jason-stupid-promo.289076@mastaler.com bounce
to jason-jcrew.832234@mastaler.com confirm

# Examine the message content
body "(viagra|ginseng)" confirm
headers "Precedence:.*junk" reject

# Accept all messages smaller than 10KB, but drop messages larger than 1MB
size <10000 deliver
size >1000000 exit

</pre>

<u><b>Example Outgoing Filter</u></b>:
<pre>

#### ~/.tmda/filters/outgoing (first match wins) ###

# All whitelisted contacts receive untagged messages
to-cdb ~/.tmda/lists/whitelist.cdb bare
to-file ~/.tmda/lists/whitelist_wildcards bare

# Keyword Addresses
to *@myisp.net kw=myisp
to king@grassland.com keyword=elvis_parsley

# Dated addresses (some with a non-default timeout interval)
to bobby@peru.com dated
to-dbm /var/dbm/slowpokes.db dated=6M

## members-only mailing lists

# ezmlm checks the envelope sender address for membership
to tmda-admin@samstech.net tag
   envelope ext=mlists-tmda-admin
   from     dated

# Majordomo and Mailman check the From: header for membership.
to freebsd-stable@freebsd.org tag
   envelope dated
   from     sender=owner-freebsd-stable@freebsd.org
   reply-to dated=2w

# Use a different username and/or domain
to *@gnus.org exp=jason@gnus.org
to xemacs-binary-kits* explicit=binkit-manager@XEmacs.ORG
to *mail*@=xemacs.org as=postmaster@XEmacs.ORG
to *@=xemacs.org as=jasonrm@xemacs.org

</pre>
