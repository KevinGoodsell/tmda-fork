#!/usr/bin/env python
#
# Copyright (C) 2001,2002,2003 Jason R. Mastaler <jason@mastaler.com>
#
# This file is part of TMDA.
#
# TMDA is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.  A copy of this license should
# be included in the file COPYING.
#
# TMDA is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with TMDA; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

"""Check a tagged (dated, keyword, or sender style only) e-mail address.

Usage:  %(program)s [-c <file>] [-V] [-h] address [senderaddr]

Where:
    -c <file>
    --config-file <file>
       Specify a different configuration file other than ~/.tmda/config.
       
    -l
    --localtime
       Display dates in the local time zone instead of UTC.

    -V
    --version
       Print TMDA version information and exit.

    --help
    -h
       Print this help message and exit.

    address is the address you want to check.
    
    senderaddr is the sender address to verify if checking a sender style address.
"""

import getopt
import os
import sys
import string
import time

try:
    import paths
except ImportError:
    # Prepend /usr/lib/python2.x/site-packages/TMDA/pythonlib
    sitedir = os.path.join(sys.prefix, 'lib', 'python'+sys.version[:3],
                           'site-packages', 'TMDA', 'pythonlib')
    sys.path.insert(0, sitedir)

from TMDA import Version


program = sys.argv[0]
localtime = None

def usage(code, msg=''):
    print __doc__ % globals()
    if msg:
        print msg
    sys.exit(code)

try:
    opts, args = getopt.getopt(sys.argv[1:],
                                   'c:lVh', ['config-file=',
                                             'localtime',
                                             'version',
                                             'help'])
except getopt.error, msg:
    usage(1, msg)

for opt, arg in opts:
    if opt in ('-h', '--help'):
        usage(0)
    if opt == '-V':
        print Version.ALL
        sys.exit()
    if opt == '--version':
        print Version.TMDA
        sys.exit()
    elif opt in ('-c', '--config-file'):
        os.environ['TMDARC'] = arg
    elif opt in ('-l', '--localtime'):
        localtime = 1

from TMDA import Defaults
from TMDA import Address

def formattime(timestamp):
    if localtime:
        timetuple = time.localtime(int(timestamp))
        tzstr = ' %Z'
    else:
        timetuple = time.gmtime(int(timestamp))
        tzstr = ' UTC'
    return time.strftime('%c' + tzstr, timetuple)

def main():
    # Address to check is required
    try:
        address = args[0]
        addr = Address.Factory(address)
    except (IndexError, ValueError):
        usage(0)

    try:
        sender_address = args[1]
    except IndexError:
        sender_address = None

    try:
        addr.verify(sender_address)
        print "STATUS: VALID"
        if addr.tag() in Defaults.TAGS_DATED:
            print "EXPIRES: %s" % formattime(addr.timestamp())
    except Address.ExpiredAddressError, msg:
        print "STATUS:", msg
        print "EXPIRED: %s" % formattime(addr.timestamp())
    except Address.AddressError, msg:
        print "STATUS:", msg


if __name__ == '__main__':
    main()

