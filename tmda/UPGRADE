======================================================================

If you are upgrading from a release of TMDA < 0.30:

Version 0.30 introduced "confirmation mode" where instead of just
bouncing the message, it will be stored in a pending-queue until the
sender responds to a confirmation request.  Some configuration changes
are necessary:

* Confirmation mode is the default, so if you want to retain the old
  behavior instead, set "CONFIRMATION_MODE = 0" in your .tmdarc.

* The pending message queue will be maintained under ~/.tmda/ by
  default, and it will be created automatically if it doesn't exist.
  Set "DATADIR" in your .tmdarc to something else if you want to use a
  different directory.

* The default locations for the former 'dot-tmda' files are now within
  ~/.tmda/lists/:

  ~/.tmda-bare      -->  ~/.tmda/lists/bare
  ~/.tmda-blacklist -->  ~/.tmda/lists/blacklist
  ~/.tmda-dated     -->  ~/.tmda/lists/dated
  ~/.tmda-exp       -->  ~/.tmda/lists/exp
  ~/.tmda-ext       -->  ~/.tmda/lists/ext
  ~/.tmda-sender    -->  ~/.tmda/lists/sender
  ~/.tmda-whitelist -->  ~/.tmda/lists/whitelist

======================================================================

If you are upgrading from a release of TMDA < 0.21:

Starting with version 0.21, the syntax for .tmda-* files changed from
simple substring matching to supporting matching patterns based on
Unix shell-style wildcards.  The benefits are more matching
flexibility and better matching precision.  

As a result, your global patterns will need to be modified to support
the new syntax.  For example, `@domain.dom' will no longer match
anyone@domain.dom.  See `FAQ' for further explanation and examples
using the new syntax.

======================================================================

If you are upgrading from a release of TMDA < 0.10:

Starting with version 0.10, TMDA's crypto-cookie generation and
verification scheme switched to using HMACs instead of block cipher
encryption, which invalidated all previous tagged addresses.  For the
motivations behind this, see `CRYPTO'.

* The amkCrypto package is no longer necessary as HMAC uses Python's
  built-in `sha' module for hashing.

* You need to generate a new CRYPT_KEY by running bin/tmda-keygen and
  replace your current key in ~/.tmdarc.

* You can remove BLOCK_CIPHER, CRYPT_IV, and HASH_FUNCTION from your
  ~/.tmdarc as they are no longer used.

* Again, the new 'dated' and 'sender' addresses are not compatible
  with those generated prior to v0.10, so re-issue addresses as
  necessary with bin/tmda-dated-address and bin/tmda-sender-address.

======================================================================
